import re

from random import choice

from datetime import datetime

from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.utils.deep_linking import decode_payload, create_start_link

from app.game.dao import UserDAO, PromocodeDAO, UsesOfPromoDAO, BonusDAO
from app.game.schemas import UserModel, PromocodeModel, UsesOfPromoModel
from app.bot.keyboard.kbs import reply_keyboard
from app.database import connection
from app.bot.create_bot import bot
from app.config import settings

from sqlalchemy.ext.asyncio import AsyncSession



router = Router()



@router.message(CommandStart())
@connection()
async def start(message: Message, session: AsyncSession, **kwargs):
    welcome_text = (
        '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å –≤ –º–∏—Ä–µ "–ü–∏–ø–∏—Å—ã"! üå±‚ú®\n'
        '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å —Å–≤–æ—é ¬´–ü–∏–ø–∏—Å—É¬ª, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /grow. –ù–∞–∂–∏–º–∞–π—Ç–µ –µ—ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–≤–æ—è ¬´–ü–∏–ø–∏—Å–∞¬ª –≤—ã—Ä–æ—Å–ª–∞ –∏–ª–∏ —É–º–µ–Ω—å—à–∏–ª–∞—Å—å ‚Äì –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç -5 –¥–æ +10 —Å–º üé≤\n\n'
        '<b>–û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥:</b>\n'
        'üåü /grow - –ü–æ–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É –∏ –¥–∞–π—Ç–µ —à–∞–Ω—Å –≤—ã—à–µ–π –ø–∏–ø–∏—Å–µ –≤—ã—Ä–∞—Å—Ç–∏\n'
        'üèÜ /top - –£–∑–Ω–∞–π—Ç–µ, –∫—Ç–æ –∏–º–µ–µ—Ç —Å–∞–º—É—é –±–æ–ª—å—à—É—é –ø–∏–ø–∏—Å—É\n'
        'ü§ù /ref - –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ, –∫—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è!\n'
        'üéâ /promo - –í–≤–æ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏ —Ä–∞—Å—Ç–∏—Ç–µ —Å–≤–æ—é –ø–∏–ø–∏—Å—É –±—ã—Å—Ç—Ä–µ–µ. –ü—Ä–æ–º–æ–∫–æ–¥—ã –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–∞ <a href=\'t.me/that_sultan\'>–∫–∞–Ω–∞–ª–µ</a>\n'
        'üéÅ /bonuses - –£–∑–Ω–∞–π—Ç–µ –æ –±–æ–Ω—É—Å–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /grow!\n\n'
        '–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —à–∞–Ω—Å —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ—é "–ü–∏–ø–∏—Å—É" —Å–∞–º–æ–π –±–æ–ª—å—à–æ–π! –£–¥–∞—á–∏! üçÄ'
    )

    try:
        # –ø–æ–∏—Å–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        match_res = re.match(r'^\/start[^ ]* (.*)', message.text)
        if match_res is None:
            await UserDAO.add_or_update_user(session=session, user_info=message.from_user, length=0)

            return await message.answer(welcome_text)


        # –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
        encoded_invite = match_res[1]
        try:
            invited_user = decode_payload(encoded_invite)
        except Exception as e:
            return await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–µ—Ñ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞!\n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –µ–µ —Å–Ω–æ–≤–∞, –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ /start')                
        

        # –ø–æ–∏—Å–∫ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_invited_info = await UserDAO.find_user(session=session, user_id=invited_user)
        if user_invited_info is None:
            return await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ä–µ—Ñ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞!\n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –µ–µ —Å–Ω–æ–≤–∞, –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ /start')                
            
        
        current_user = await UserDAO.find_user(session=session, user_id=message.from_user.id)
        if current_user is not None:
            return await message.answer('–í—ã —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ!')  

        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        user = await UserDAO.add_or_update_user(session=session, user_info=message.from_user, length=5)
        await UserDAO.add_length_pipisa(session=session, user_id=invited_user, length=25)

        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        return await message.answer(
            f'{welcome_text}\n'
            f'<a href=\'t.me/{user.username}\'>{user.first_name}</a>, –≤–∞—à–∞ –ø–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ <b>{user.length}—Å–º üòä</b>\n'
            f'–î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã —Ä–∞–≤–Ω–∞ <b>{user.length}—Å–º</b> üìè\n', disable_web_page_preview=True
        )
    except Exception as e:
        print(e)

        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')


@router.message(Command('grow'))
@connection()
async def grow_cactuc(message: Message, session: AsyncSession, **kwargs):
    try: 
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = await UserDAO.add_or_update_user(session=session, user_info=message.from_user, length=0)

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø –ø–æ–ø—ã—Ç–∫–∏ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–æ–∂–∞—Ç–∏–µ
        if (user.bonus_attempts == 0) and (user.last_grow == datetime.now().date()):
            return await message.answer(
                f'<a href=\'t.me/{user.username}\'>{user.first_name}</a>, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–ø—ã—Ç–æ–∫ üò¢. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞ üåÖ\n'
                f'–î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã —Ä–∞–≤–Ω–∞ <b>{user.length}—Å–º</b> üìè\n'
                f'–í–∞—à grow streak <b>{user.grow_streak}</b> ‚ú®', disable_web_page_preview=True
            )
    

        # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–∞–Ω–µ –∏—Å–∫–ª—é—á–∞—è –Ω–æ–ª—å
        random_length = choice([i for i in range(-5, 10) if i not in [0]])
        user, bonuses = await UserDAO.add_length_cactus(session=session, user_id=user.user_id, length=random_length)

        bonus_text = ''
        if bonuses.bonus_cm > 0:
            bonus_text = f'–ù–∞—á–∏—Å–ª–µ–Ω–Ω–æ <b>{bonuses.bonus_cm} –±–æ–Ω—É—Å–Ω—ã—Ö —Å–º üí´</b>'


        if random_length > 0:
            return await message.answer(
                f'<a href=\'t.me/{user.username}\'>{user.first_name}</a>, –≤–∞—à–∞ –ø–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ <b>{random_length}—Å–º üòä</b>. {bonus_text}\n'
                f'–î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã —Ä–∞–≤–Ω–∞ <b>{user.length}—Å–º</b> üìè\n'
                f'–û—Å—Ç–∞–ª–æ—Å—å <b>{user.bonus_attempts}</b> –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /grow üåø\n'
                f'–í–∞—à grow streak <b>{user.grow_streak}</b> ‚ú®', disable_web_page_preview=True
            )
        else:
            return await message.answer(
                f'<a href=\'t.me/{user.username}\'>{user.first_name}</a>, –≤–∞—à–∞ –ø–∏–ø–∏—Å–∞ —Å–æ–∫—Ä–∞—Ç–∏–ª–∞—Å—å –Ω–∞ <b>{random_length}—Å–º üòî</b>. {bonus_text}\n'
                f'–î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã —Ä–∞–≤–Ω–∞ <b>{user.length}—Å–º</b> üìè\n'
                f'–û—Å—Ç–∞–ª–æ—Å—å <b>{user.bonus_attempts}</b> –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /grow üåø\n'
                f'–í–∞—à grow streak <b>{user.grow_streak}</b> ‚ú®', disable_web_page_preview=True
            )
    except Exception as e:
        print(e)

        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')


@router.message(Command('top'))
@connection()
async def top_users(message: Message, session: AsyncSession, **kwargs):
    try:
        ranked_users = await UserDAO.get_top_users(session=session, user_id=message.from_user.id)

        list_top_users = '–¢–æ–ø 30 –ø–∏–ø–∏—Å –º–∏—Ä–∞:\n'
        for user in ranked_users:
            list_top_users += f"{user['rank']}. {user['first_name']}: {user['length']}—Å–º\n"
        
        return await message.answer(list_top_users)
    except Exception as e:
        print(e)

        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')


@router.message(Command('bonuses'))
@connection()
async def bonuses(message: Message, session: AsyncSession, **kwargs):
    try:
        bonuses = await BonusDAO.get_bonuses(session=session)

        list_bonuses = '–ë–æ–Ω—É—Å—ã: üéÅ\n'
        for bonus in bonuses:
            list_bonuses += f"–î–µ–Ω—å {bonus['min_streak']:2}: + {bonus['bonus_cm']:2}—Å–º üåü, + {bonus['bonus_attempts']:2} –ø–æ–ø—ã—Ç–æ–∫ üöÄ\n"

        return await message.answer(list_bonuses)
    except Exception as e:
        print(e)

        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')


@router.message(Command('ref'))
@connection()
async def ref(message: Message, session: AsyncSession, **kwargs):
    try:
        user = await UserDAO.add_or_update_user(session=session, user_info=message.from_user)
        link = await create_start_link(bot, str(user.user_id), encode=True)

        return await message.answer(f'–ù–∞—á–∏–Ω–∞–π —Ä–æ—Å—Ç–∏—Ç—å —Å–≤–æ—é –ø–∏–ø–∏—Å—É! üå±‚ú®\n–ü–æ–ª—É—á–∞–π 25 —Å–º –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞! üë•üí•\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å –≤ 5 —Å–º! üéâüòâ\n{link}', disable_web_page_preview=False)
    except Exception as e:
        print(e)

        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')


@router.message(Command('promo'))
@connection()
async def promo(message: Message, session: AsyncSession, **kwargs):
    try:
        match_promo = re.match(r'^\/promo (\d+)', message.text)
        if match_promo is None:
            return await message.answer('–í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ /promo –ü–†–û–ú–û–ö–û–î')
        

        code = match_promo[1]

        promo_exists = await PromocodeDAO.find_promo(session=session, code_id=code)
        if promo_exists is None:
            return await message.answer('–î–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
        

        user_id = message.from_user.id

        uses_of_promo = await UsesOfPromoDAO.check_uses(session=session, user_id=user_id, code_id=code)
        if uses_of_promo is not None:
            return await message.answer('–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥')
        

        values = UsesOfPromoModel(
            user_id = user_id,
            code_id = code
        )
        user = await UsesOfPromoDAO.add_uses(session=session, values=values, length=promo_exists.length)

        return await message.answer(
            f'<a href=\'t.me/{user.username}\'>{user.first_name}</a>, –≤–∞—à–∞ –ø–∏–ø–∏—Å–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ <b>{promo_exists.length}—Å–º üòä</b>\n'
            f'–î–ª–∏–Ω–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã —Ä–∞–≤–Ω–∞ <b>{user.length}—Å–º</b> üìè\n', disable_web_page_preview=True
        )


    except Exception as e:
        print(e)
        
        return await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–∏—Ç–µ –æ–± –æ—à–∏–±–∫–µ <a href=\'t.me/kickspink\'>—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É</a>!')
    

@router.message(Command('sending_message'))
@connection()
async def answer_message(message: Message, session: AsyncSession, **kwargs):
    user_id = message.from_user.id
    if user_id in settings.ADMIN_IDS:
        number_processed_users = 0
        inactiv_users = 0
        
        users = await UserDAO.all_users(session=session)

        for user in users:
            number_processed_users += 1

            try:
                if number_processed_users % 50 == 0:
                    print(number_processed_users)

                await bot.send_message(
                    user[0], 
                    '–î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è! üéâ\n\n'
                    '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤–∞—Å —Å –ù–æ–≤—ã–º –≥–æ–¥–æ–º! üòä –•–æ—á—É –≤—ã—Ä–∞–∑–∏—Ç—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞. –í 25 –≥–æ–¥—É —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å —Å–æ–∑–¥–∞—Ç—å –¥–ª—è –≤–∞—Å –Ω–µ—á—Ç–æ –ø–æ–∏—Å—Ç–∏–Ω–µ –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω–æ–µ. ‚ú®\n\n'
                    '–ñ–µ–ª–∞—é –≤–∞–º –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è üí™, —É—Å–ø–µ—Ö–æ–≤ –≤–æ –≤—Å–µ—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö üöÄ, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π üåü –∏, –∫–æ–Ω–µ—á–Ω–æ –∂–µ, –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –≤–∞—à–µ–π –ø–∏–ø–∏—Å—ã! üìà\n\n'
                    '–û–±–Ω–æ–≤–ª–µ–Ω–∏—è:\n'
                    '1. –§—É–Ω–∫—Ü–∏—è —É–º–µ–Ω—å—à–µ–Ω–∏—è "–ø–∏–ø–∏—Å—ã" –∑–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–∞ –±–æ–Ω—É—Å—ã –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /grow. –ù–∞ 16-–π –¥–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—ã –ø–æ–ª—É—á–∏—Ç–µ +15 —Å–º –∏ 3 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏. üéÅ\n'
                    '2. –í—Å–µ –±–æ–Ω—É—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∫–æ–º–∞–Ω–¥–µ /bonuses. üîç\n'
                    '3. –¢–æ–ø —á–∞—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –≤–µ—Ä–Ω—ë—Ç—Å—è –ø–æ–∑–∂–µ. ‚è≥\n'
                    '4. –¢–æ–ø ¬´–ø–∏–ø–∏—Å¬ª –º–∏—Ä–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω –¥–æ 30 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ /top üë•\n'
                    '5. –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 25 —Å–º –≤–º–µ—Å—Ç–æ 1 —Å–º. ü§ù\n'
                    '6. –ù–∞ –¥–Ω—è—Ö –Ω–∞ <a href=\'t.me/that_sultan\'>–∫–∞–Ω–∞–ª–µ</a> –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∞–Ω—Ç–∏–º–µ—Ä—ã. üé´\n\n'
                    '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –ü—É—Å—Ç—å 25 –≥–æ–¥ –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏! üéÑüéÜ', disable_web_page_preview=True
                )
            except:
                inactiv_users += 1
                if inactiv_users % 5 == 0:
                    print(inactiv_users)

                continue
        
        print(
            f'–∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {number_processed_users}\n'
            f'–∫–æ–ª-–≤–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {inactiv_users}'
            )